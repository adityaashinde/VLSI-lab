Experiment no 1 :

HA

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;


entity adder is
    Port ( a : in  STD_LOGIC;
           b : in  STD_LOGIC;
           s : out  STD_LOGIC;
           c : out  STD_LOGIC);
end adder;

architecture Behavioral of adder is

begin

s<=a xor b;
c<=a and b;

end Behavioral;


----------------HA TESTBENCH :


LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
ENTITY hadder1 IS
END hadder1;
 
ARCHITECTURE behavior OF hadder1 IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT adder
    PORT(
         a : IN  std_logic;
         b : IN  std_logic;
         s : OUT  std_logic;
         c : OUT  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal a : std_logic := '0';
   signal b : std_logic := '0';

 	--Outputs
   signal s : std_logic;
   signal c : std_logic;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: adder PORT MAP (
          a => a,
          b => b,
          s => s,
          c => c
        );

   -- Stimulus process
   stim_proc: process
   begin		
	
	a<='0';
	b<='0';
      -- hold reset state for 100 ns.
      wait for 100 ns;	
		
		a<='0';
	   b<='1';
		
		wait for 100 ns;	
		
		a<='1';
	   b<='0';
		
		wait for 100 ns;	
		
		a<='1';
	   b<='1';
		
		wait for 100 ns;

--      wait for <clock>_period*10;

      -- insert stimulus here 

      wait;
   end process;

END;


